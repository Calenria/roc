<project default="jar" name="roc">
	<property name="base.dir" value="." />
	<property name="basedir" value="." />
	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />
	<property name="build.dir" value="build" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="jar.dir" value="${build.dir}/jar" />
	<property name="doc.dir" value="docs" />
	<property name="javadoc.dir" value="${doc.dir}/javadoc" />
	<property name="checkstyle.dir" value="${doc.dir}/checkstyle" />
	
	<property name="main-class" value="com.github.calenria.roc.Roc" />

	<mkdir dir="${javadoc.dir}" />
	<mkdir dir="${checkstyle.dir}" />
	
	<taskdef resource="checkstyletask.properties" classpath="${lib.dir}/checkstyle.jar" />

	<checkstyle config="docs/sun_checks.xml" failOnViolation="false" failureProperty="checkstyle.failure">
		
		<fileset dir="${src.dir}" includes="**/*.java" />
		<classpath>
			<fileset dir="${lib.dir}" includes="*.jar" />
		</classpath>
		<formatter type="plain" />
		<formatter type="xml" toFile="docs/checkstyle/checkstyle.xml" />
	</checkstyle>

	<property name="findbugs.home" value="docs/findbugs" />

	<target name="javadoc" depends="compile">
		<javadoc packagenames="*" encoding="UTF-8" sourcepath="${src.dir}" destdir="${javadoc.dir}" private="false" author="true">
			<excludepackage name="org.bukkit"/>
			<excludepackage name="net.milkbowl"/>
		</javadoc>
	</target>

	<macrodef name="git-revision">
		<attribute name="path" />
		<attribute name="output" />
		<sequential>
			<exec executable="git" outputproperty="head" dir="@{path}">
				<arg value="rev-parse" />
				<arg value="HEAD" />
			</exec>
			<echo file="GIT_REVISION_LOG" message="Found revision: ${head}" />
			<exec executable="git" outputproperty="dirty">
				<arg value="diff" />
				<arg value="--shortstatt" />
			</exec>
			<condition property="@{output}" value="${head}" else="${head} (dirty)">
				<equals arg1="${dirty}" arg2="" />
			</condition>
		</sequential>
	</macrodef>

	<path id="classpath">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<tstamp>
		<format property="DSTAMP" pattern="dd.MM.yyyy" locale="de,DE" />
		<format property="TSTAMP" pattern="HH:mm" locale="de,DE" />
	</tstamp>

	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<target name="compile">
		<mkdir dir="${classes.dir}" />
		<javac encoding="UTF-8" srcdir="${src.dir}" destdir="${classes.dir}" includeantruntime="false" classpathref="classpath" />
		<copy todir="${classes.dir}">
			<fileset dir="${base.dir}" includes="*.yml,*.properties" />
		</copy>
	</target>

	<target name="jar" depends="compile">
		<git-revision path="${base.dir}" output="version" />
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Built-By" value="Calenria" />
				<attribute name="Built-Date" value="${DSTAMP} - ${TSTAMP}" />
				<attribute name="Main-Class" value="${main-class}" />
				<attribute name="Version" value="${version}" />
			</manifest>
		</jar>
	</target>

	<target name="run" depends="jar">
		<java jar="${jar.dir}/${ant.project.name}.jar" fork="true" />
	</target>

	<target name="clean-build" depends="clean,jar" />

	<target name="main" depends="clean,run" />
</project>